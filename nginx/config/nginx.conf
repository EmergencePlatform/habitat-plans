worker_processes  {{cfg.worker_processes}};
daemon off;

worker_rlimit_nofile {{#if cfg.worker_rlimit_nofile}}{{cfg.worker_rlimit_nofile}}{{else}}8192{{/if}};

events {
    worker_connections  {{cfg.events.worker_connections}};

    {{#if cfg.events.snippet ~}}
    {{cfg.events.snippet}}
    {{~ /if}}
}

http {
    {{~ #if cfg.http.access_log}}
    access_log {{cfg.http.access_log}};
    {{~ /if}}

    include        mime.types;
    default_type   application/octet-stream;

    sendfile       {{cfg.http.sendfile}};
    tcp_nopush     {{cfg.http.tcp_nopush}};
    tcp_nodelay    {{cfg.http.tcp_nodelay}};

    keepalive_timeout  {{cfg.http.keepalive_timeout}};

    client_header_timeout {{cfg.http.client_header_timeout}};
    client_body_timeout {{cfg.http.client_body_timeout}};
    client_max_body_size {{cfg.http.client_max_body_size}};
    send_timeout {{cfg.http.send_timeout}};

    fastcgi_read_timeout {{cfg.http.fastcgi_read_timeout}};
    fastcgi_buffer_size {{cfg.http.fastcgi_buffer_size}};
    fastcgi_buffers {{cfg.http.fastcgi_buffers}};
    fastcgi_keep_conn {{cfg.http.fastcgi_keep_conn}};
    {{#if cfg.http.fastcgi_index ~}}
    fastcgi_index {{cfg.http.fastcgi_index}};
    {{~ /if}}

    gzip  on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    ssl_protocols {{cfg.http.ssl_protocols}};

    {{#if cfg.http.snippet ~}}
    {{cfg.http.snippet}}
    {{~ /if}}

    {{#if bind.backend ~}}
    upstream backend {
        {{~ #eachAlive bind.backend.members as |member|}}
        server {{member.sys.ip}}:{{member.cfg.port}};
        {{~ /eachAlive}}

        keepalive {{cfg.upstream.keepalive}};

        {{~ #if cfg.http.snippet}}
        {{cfg.upstream.snippet}}
        {{~ /if}}
    }
    {{~ /if}}

    {{# if cfg.default_server.enabled ~}}
    server {
        server_name  _;

        listen       {{cfg.http.listen.port}} default_server;
        listen       [::]:{{cfg.http.listen.port}} default_server;

        {{~ # if cfg.default_server.ssl_certificate}}
        listen       {{cfg.http.listen.ssl_port}} default_server ssl;
        listen       [::]:{{cfg.http.listen.ssl_port}} default_server ssl;

        ssl_certificate {{cfg.default_server.ssl_certificate}};
        ssl_certificate_key {{cfg.default_server.ssl_certificate_key}};
        {{~ /if}}

        include default_server.conf;
    }
    {{~ /if}}

    {{# each cfg.servers ~}}
    # server: {{@key}}
    server {
        server_name  {{#each this.name as |name|}} {{name}}{{/each}};

        listen       {{../cfg.http.listen.port}};
        listen       [::]:{{../cfg.http.listen.port}};

        {{~ # if this.ssl_certificate}}
        listen       {{../cfg.http.listen.ssl_port}} ssl;
        listen       [::]:{{../cfg.http.listen.ssl_port}} ssl;

        ssl_certificate {{this.ssl_certificate}};
        ssl_certificate_key {{this.ssl_certificate_key}};
        {{~ /if}}

        {{# if this.include_default_server ~}}
        include default_server.conf;
        {{~ /if}}

        {{# if this.snippet ~}}
        {{this.snippet}}
        {{~ /if}}
    }
    {{/each}}
}
